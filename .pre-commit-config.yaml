repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-added-large-files
        args: ["--maxkb=500"]
      - id: fix-byte-order-marker
      - id: check-case-conflict
      - id: check-merge-conflict
      - id: check-symlinks
      - id: debug-statements

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: Detect secrets
        description: Detects high entropy strings that are likely to be passwords.
        files: ^autoagi/
        stages: [push]

  - repo: local
    # For proper type checking, all dependencies need to be up-to-date.
    # It's also a good idea to check that poetry.lock is consistent with pyproject.toml.
    hooks:
      - id: poetry-install
        name: Check & Install dependencies - AutoAGI Platform - Backend
        alias: poetry-install-platform-backend
        entry: poetry -C autoagi/backend install
        # include autoagi_libs source (since it's a path dependency)
        files: ^autoagi/(backend|autoagi_libs)/poetry\.lock$
        types: [file]
        language: system
        pass_filenames: false

      - id: poetry-install
        name: Check & Install dependencies - AutoAGI Platform - Libs
        alias: poetry-install-platform-libs
        entry: poetry -C autoagi/autoagi_libs install
        files: ^autoagi/autoagi_libs/poetry\.lock$
        types: [file]
        language: system
        pass_filenames: false

  - repo: local
    # For proper type checking, Prisma client must be up-to-date.
    hooks:
      - id: prisma-generate
        name: Prisma Generate - AutoAGI Platform - Backend
        alias: prisma-generate-platform-backend
        entry: bash -c 'cd autoagi/backend && poetry run prisma generate'
        # include everything that triggers poetry install + the prisma schema
        files: ^autoagi/((backend|autoagi_libs)/poetry\.lock|backend/schema.prisma)$
        types: [file]
        language: system
        pass_filenames: false

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.7.2
    hooks:
      - id: ruff
        name: Lint (Ruff) - AutoAGI Platform - Backend
        alias: ruff-lint-platform-backend
        files: ^autoagi/backend/
        args: [--fix]

      - id: ruff
        name: Lint (Ruff) - AutoAGI Platform - Libs
        alias: ruff-lint-platform-libs
        files: ^autoagi/autoagi_libs/
        args: [--fix]

      - id: ruff-format
        name: Format (Ruff) - AutoAGI Platform - Libs
        alias: ruff-lint-platform-libs
        files: ^autoagi/autoagi_libs/

  - repo: local
    # isort needs the context of which packages are installed to function, so we
    # can't use a vendored isort pre-commit hook (which runs in its own isolated venv).
    hooks:
      - id: isort
        name: Lint (isort) - AutoAGI Platform - Backend
        alias: isort-platform-backend
        entry: poetry -P autoagi/backend run isort -p backend
        files: ^autoagi/backend/
        types: [file, python]
        language: system

  - repo: https://github.com/psf/black
    rev: 23.12.1
    # Black has sensible defaults, doesn't need package context, and ignores
    # everything in .gitignore, so it works fine without any config or arguments.
    hooks:
      - id: black
        name: Format (Black)

  - repo: local
    # To have watertight type checking, we check *all* the files in an affected
    # project. To trigger on poetry.lock we also reset the file `types` filter.
    hooks:
      - id: pyright
        name: Typecheck - AutoAGI Platform - Backend
        alias: pyright-platform-backend
        entry: poetry -C autoagi/backend run pyright
        # include forge source (since it's a path dependency) but exclude *_test.py files:
        files: ^autoagi/(backend/((backend|test)/|(\w+\.py|poetry\.lock)$)|autoagi_libs/(autoagi_libs/.*(?<!_test)\.py|poetry\.lock)$)
        types: [file]
        language: system
        pass_filenames: false

      - id: pyright
        name: Typecheck - AutoAGI Platform - Libs
        alias: pyright-platform-libs
        entry: poetry -C autoagi/autoagi_libs run pyright
        files: ^autoagi/autoagi_libs/(autoagi_libs/|poetry\.lock$)
        types: [file]
        language: system
        pass_filenames: false

  - repo: local
    hooks:
      - id: pytest
        name: Run tests - AutoAGI Platform - Backend
        alias: pytest-platform-backend
        entry: bash -c 'cd autoagi/backend && poetry run pytest'
        # include autoagi_libs source (since it's a path dependency) but exclude *_test.py files:
        files: ^autoagi/(backend/((backend|test)/|poetry\.lock$)|autoagi_libs/(autoagi_libs/.*(?<!_test)\.py|poetry\.lock)$)
        language: system
        pass_filenames: false